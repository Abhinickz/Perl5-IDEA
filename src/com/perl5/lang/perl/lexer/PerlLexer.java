/*
 * Copyright 2015 Alexandr Evstigneev
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* The following code was generated by JFlex 1.4.3 on 03.05.15 13:19 */

package com.perl5.lang.perl.lexer;


import com.intellij.openapi.project.Project;
import org.jetbrains.annotations.Nullable;

import java.util.regex.Pattern;

public class PerlLexer extends PerlLexerGenerated
{
	// fixme move somewhere
	public static final String STRING_UNDEF = "undef";
	public static final Pattern IDENTIFIER_PATTERN = Pattern.compile("[_\\p{L}][_\\p{L}\\d]*");

	public PerlLexer(@Nullable Project project)
	{
		super(null);
	}

	@Override
	public int yystate()
	{
		return preparsedTokensList.isEmpty() &&
				!myFormatWaiting &&
				heredocQueue.isEmpty() &&
				myBracesStack.isEmpty() &&
				myBracketsStack.isEmpty() &&
				myParensStack.isEmpty()
				? super.yystate() : PREPARSED_ITEMS;
	}
}
