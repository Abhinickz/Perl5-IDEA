/* The following code was generated by JFlex 1.4.3 on 02.05.15 16:24 */

package com.perl5.lang.perl.lexer;

/*
    http://jflex.de/manual.html
    http://www2.cs.tum.edu/projects/cup

*/

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.TokenType;
import com.intellij.psi.tree.IElementType;
import org.jetbrains.annotations.NotNull;
import com.perl5.lang.perl.util.PerlFunctionUtil;
import com.perl5.lang.perl.util.PerlScalarUtil;
import com.perl5.lang.perl.util.PerlHashUtil;
import com.perl5.lang.perl.util.PerlGlobUtil;
import com.perl5.lang.perl.util.PerlArrayUtil;
import com.perl5.lang.perl.util.PerlPackageUtil;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 02.05.15 16:24 from the specification file
 * <tt>C:/Repository/Perl5-IDEA/src/com/perl5/lang/perl/lexer/Perl.flex</tt>
 */
public class PerlLexer extends PerlLexerProto implements FlexLexer, PerlElementTypes {
  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int LEX_POD = 4;
  public static final int LEX_MULTILINE = 10;
  public static final int LEX_TRANS_MODIFIERS = 32;
  public static final int LEX_QUOTE_LIKE_LIST_OPENER = 20;
  public static final int LEX_TRANS_OPENER = 26;
  public static final int LEX_MULTILINE_WAITING = 8;
  public static final int LEX_BAREWORD_STRING = 6;
  public static final int LEX_QUOTE_LIKE_CHARS = 16;
  public static final int LEX_QUOTE_LIKE_WORDS = 22;
  public static final int LEX_TRANS_CLOSER = 30;
  public static final int LEX_REGEX_ITEMS = 36;
  public static final int LEX_TRANS_CHARS = 28;
  public static final int LEX_REGEX_OPENER = 34;
  public static final int LEX_QUOTE_LIKE_OPENER = 14;
  public static final int LEX_QUOTE_LIKE_CLOSER = 18;
  public static final int LEX_EOF = 2;
  public static final int YYINITIAL = 0;
  public static final int LEX_MULTILINE_TOKEN = 12;
  public static final int LEX_QUOTE_LIKE_LIST_CLOSER = 24;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7, 
     8,  8,  9,  9, 10, 10, 11, 11,  9,  9, 12, 12, 13, 13, 14, 14, 
    15, 15, 16, 16, 17, 17
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\2\1\0\1\3\1\1\22\0\1\3\1\27\1\6"+
    "\1\11\1\70\1\34\1\50\1\7\1\113\1\114\1\26\1\25\1\22"+
    "\1\23\1\14\1\33\1\115\1\64\1\64\1\64\1\64\3\5\1\106"+
    "\1\5\1\53\1\116\1\36\1\32\1\24\1\22\1\117\1\20\1\75"+
    "\1\101\1\17\1\15\1\105\1\74\1\110\1\73\1\4\1\124\1\102"+
    "\1\100\1\16\1\104\1\112\1\4\1\72\1\76\1\21\1\103\1\111"+
    "\1\71\1\107\1\77\1\4\1\120\1\31\1\121\1\52\1\12\1\10"+
    "\1\55\1\65\1\45\1\56\1\42\1\60\1\41\1\63\1\61\1\4"+
    "\1\66\1\37\1\46\1\44\1\54\1\47\1\43\1\57\1\62\1\40"+
    "\1\67\1\13\1\122\1\35\1\123\1\4\1\125\1\51\1\126\1\30"+
    "\uff81\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\2\0\1\3\1\4\13\0\2\5"+
    "\1\6\1\7\1\10\1\11\1\12\1\13\1\11\1\10"+
    "\1\5\11\14\1\15\2\14\4\10\1\16\2\10\1\17"+
    "\1\10\3\14\6\10\1\17\3\10\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\10\1\27\1\30\1\31"+
    "\1\1\3\2\1\32\1\11\1\32\2\14\4\32\1\16"+
    "\2\32\1\17\7\32\1\17\4\32\1\27\1\11\2\3"+
    "\1\33\1\34\1\35\2\36\1\37\1\40\1\41\1\42"+
    "\2\43\1\44\2\45\1\46\1\47\2\50\1\0\1\13"+
    "\2\11\1\0\1\51\1\10\1\14\1\52\1\53\7\0"+
    "\2\54\1\0\1\10\3\14\6\10\1\16\1\10\1\17"+
    "\1\55\1\56\1\14\5\10\1\57\14\10\3\60\2\61"+
    "\1\0\1\10\1\2\2\11\1\51\2\32\1\14\6\32"+
    "\1\16\1\32\1\17\1\55\1\56\1\14\22\32\3\11"+
    "\6\10\1\0\1\10\13\0\1\62\3\0\12\10\1\56"+
    "\5\10\1\0\5\60\1\0\1\60\1\0\1\10\1\2"+
    "\17\32\1\56\6\32\6\10\1\51\1\10\2\0\1\63"+
    "\10\0\11\10\13\0\1\64\16\32\5\10\1\0\1\63"+
    "\2\0\1\62\7\10\11\0\1\64\12\32\3\10\1\0"+
    "\2\10\11\0\4\32\1\65\1\66\1\10\11\0\1\66"+
    "\1\32\61\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[471];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\127\0\256\0\u0105\0\u015c\0\u01b3\0\u020a\0\u0261"+
    "\0\u02b8\0\u030f\0\u0366\0\u03bd\0\u0414\0\u046b\0\u04c2\0\u0519"+
    "\0\u0570\0\u05c7\0\u061e\0\u0675\0\u061e\0\u06cc\0\u0723\0\u077a"+
    "\0\u061e\0\u07d1\0\u0828\0\u087f\0\u08d6\0\u061e\0\u092d\0\u0984"+
    "\0\u09db\0\u0a32\0\u0a89\0\u0ae0\0\u0b37\0\u0b8e\0\u0be5\0\u0c3c"+
    "\0\u0c93\0\u0cea\0\u0d41\0\u0d98\0\u0def\0\u0e46\0\u0e9d\0\u0ef4"+
    "\0\u0f4b\0\u0fa2\0\u0ff9\0\u1050\0\u10a7\0\u10fe\0\u1155\0\u11ac"+
    "\0\u1203\0\u125a\0\u12b1\0\u1308\0\u135f\0\u13b6\0\u140d\0\u1464"+
    "\0\u061e\0\u061e\0\u061e\0\u14bb\0\u061e\0\u061e\0\u1512\0\u0723"+
    "\0\u061e\0\u061e\0\u061e\0\u1569\0\u061e\0\u15c0\0\u1617\0\u166e"+
    "\0\u16c5\0\u171c\0\u1773\0\u17ca\0\u1821\0\u1878\0\u18cf\0\u1926"+
    "\0\u197d\0\u19d4\0\u1a2b\0\u1a82\0\u1ad9\0\u1b30\0\u1b87\0\u1bde"+
    "\0\u1c35\0\u1c8c\0\u1ce3\0\u1d3a\0\u1d91\0\u1de8\0\u1e3f\0\u1617"+
    "\0\u1e96\0\u1eed\0\u1f44\0\u061e\0\u061e\0\u1f9b\0\u061e\0\u1ff2"+
    "\0\u061e\0\u061e\0\u061e\0\u061e\0\u061e\0\u2049\0\u061e\0\u061e"+
    "\0\u20a0\0\u061e\0\u061e\0\u061e\0\u20f7\0\u214e\0\u061e\0\u21a5"+
    "\0\u21fc\0\u2253\0\u22aa\0\u2301\0\u2358\0\u23af\0\u061e\0\u2406"+
    "\0\u245d\0\u24b4\0\u250b\0\u2562\0\u25b9\0\u2610\0\u2667\0\u061e"+
    "\0\u26be\0\u2715\0\u276c\0\u27c3\0\u0723\0\u281a\0\u2871\0\u28c8"+
    "\0\u291f\0\u2976\0\u29cd\0\u2a24\0\u2a7b\0\u0723\0\u0723\0\u0723"+
    "\0\u2ad2\0\u2b29\0\u2b80\0\u2bd7\0\u2c2e\0\u2c85\0\u061e\0\u2cdc"+
    "\0\u2d33\0\u2d8a\0\u2de1\0\u2e38\0\u2e8f\0\u2ee6\0\u2f3d\0\u2f94"+
    "\0\u2feb\0\u3042\0\u3099\0\u30f0\0\u061e\0\u3147\0\u319e\0\u061e"+
    "\0\u31f5\0\u324c\0\u32a3\0\u32fa\0\u3351\0\u33a8\0\u33ff\0\u3456"+
    "\0\u1617\0\u34ad\0\u3504\0\u355b\0\u35b2\0\u3609\0\u3660\0\u36b7"+
    "\0\u370e\0\u1617\0\u1617\0\u1617\0\u3765\0\u37bc\0\u3813\0\u386a"+
    "\0\u38c1\0\u3918\0\u396f\0\u39c6\0\u3a1d\0\u3a74\0\u3acb\0\u3b22"+
    "\0\u3b79\0\u3bd0\0\u3c27\0\u3c7e\0\u3cd5\0\u3d2c\0\u3d83\0\u3dda"+
    "\0\u3e31\0\u2253\0\u3e88\0\u3edf\0\u3f36\0\u3f8d\0\u3fe4\0\u403b"+
    "\0\u4092\0\u40e9\0\u4140\0\u4197\0\u41ee\0\u4245\0\u429c\0\u42f3"+
    "\0\u434a\0\u43a1\0\u43f8\0\u444f\0\u27c3\0\u44a6\0\u44fd\0\u4554"+
    "\0\u45ab\0\u4602\0\u4659\0\u46b0\0\u4707\0\u475e\0\u47b5\0\u480c"+
    "\0\u4863\0\u48ba\0\u4911\0\u4968\0\u49bf\0\u4a16\0\u4a6d\0\u4ac4"+
    "\0\u4b1b\0\u4b72\0\u4bc9\0\u4c20\0\u4c77\0\u4cce\0\u4d25\0\u4d7c"+
    "\0\u4dd3\0\u4e2a\0\u4e81\0\u4ed8\0\u4f2f\0\u4f86\0\u4fdd\0\u5034"+
    "\0\u508b\0\u50e2\0\u5139\0\u5190\0\u51e7\0\u523e\0\u5295\0\u52ec"+
    "\0\u5343\0\u539a\0\u53f1\0\u5448\0\u549f\0\u54f6\0\u554d\0\u55a4"+
    "\0\u55fb\0\u5652\0\u56a9\0\u5700\0\u5757\0\u57ae\0\u5805\0\u585c"+
    "\0\u58b3\0\u590a\0\u5961\0\u59b8\0\u5a0f\0\u5a66\0\u5abd\0\u5b14"+
    "\0\u5b6b\0\u5bc2\0\u5c19\0\u5c70\0\u5cc7\0\u5d1e\0\u5d75\0\u5dcc"+
    "\0\u5e23\0\u5e7a\0\u5ed1\0\u5f28\0\u5f7f\0\u5fd6\0\u602d\0\u6084"+
    "\0\u60db\0\u6132\0\u6189\0\u61e0\0\u6237\0\u628e\0\u62e5\0\u633c"+
    "\0\u6393\0\u63ea\0\u6441\0\u6498\0\u64ef\0\u6546\0\u659d\0\u65f4"+
    "\0\u664b\0\u66a2\0\u66f9\0\u6750\0\u67a7\0\u67fe\0\u6855\0\u68ac"+
    "\0\u6903\0\u695a\0\u69b1\0\u6a08\0\u6a5f\0\u6ab6\0\u061e\0\u6b0d"+
    "\0\u6b64\0\u061e\0\u6bbb\0\u6c12\0\u6c69\0\u6cc0\0\u6d17\0\u6d6e"+
    "\0\u6dc5\0\u6e1c\0\u6e73\0\u6eca\0\u6f21\0\u6f78\0\u6fcf\0\u7026"+
    "\0\u707d\0\u70d4\0\u061e\0\u712b\0\u7182\0\u71d9\0\u7230\0\u7287"+
    "\0\u72de\0\u7335\0\u738c\0\u73e3\0\u743a\0\u7491\0\u74e8\0\u753f"+
    "\0\u7596\0\u75ed\0\u7644\0\u769b\0\u76f2\0\u7749\0\u77a0\0\u77f7"+
    "\0\u784e\0\u78a5\0\u78fc\0\u7953\0\u79aa\0\u7a01\0\u7a58\0\u7aaf"+
    "\0\u0723\0\u0723\0\u7b06\0\u7b5d\0\u7bb4\0\u7c0b\0\u7c62\0\u7cb9"+
    "\0\u7d10\0\u7d67\0\u7dbe\0\u7e15\0\u1617\0\u7e6c\0\u7ec3\0\u7f1a"+
    "\0\u7f71\0\u7fc8\0\u801f\0\u8076\0\u80cd\0\u8124\0\u817b\0\u81d2"+
    "\0\u8229\0\u8280\0\u82d7\0\u832e\0\u8385\0\u83dc\0\u8433\0\u848a"+
    "\0\u84e1\0\u8538\0\u858f\0\u85e6\0\u863d\0\u8694\0\u86eb\0\u8742"+
    "\0\u8799\0\u87f0\0\u8847\0\u889e\0\u88f5\0\u894c\0\u89a3\0\u89fa"+
    "\0\u8a51\0\u8aa8\0\u8aff\0\u8b56\0\u8bad\0\u8c04\0\u8c5b\0\u8cb2"+
    "\0\u8d09\0\u8d60\0\u8db7\0\u8e0e\0\u8e65\0\u8ebc\0\u8f13";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[471];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\23\1\24\1\25\1\26\1\27\1\30\3\31\1\32"+
    "\1\33\1\34\1\35\5\27\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\36\1\45\1\46\1\47\1\50"+
    "\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60"+
    "\1\61\1\62\1\63\1\64\1\36\1\65\1\66\1\67"+
    "\1\70\1\71\1\72\1\73\1\74\1\27\1\30\1\75"+
    "\1\76\1\77\1\100\15\27\1\30\4\27\1\101\1\102"+
    "\1\30\1\103\1\104\1\105\1\106\1\107\1\110\1\27"+
    "\1\111\1\112\2\2\1\113\124\2\2\114\1\115\27\114"+
    "\1\116\74\114\1\23\1\24\1\25\1\26\1\117\1\30"+
    "\3\31\1\32\1\120\1\121\1\35\5\117\1\36\1\37"+
    "\1\40\1\41\1\42\1\43\1\44\1\36\1\122\1\46"+
    "\1\47\1\123\1\51\1\124\1\125\1\126\1\127\1\130"+
    "\1\131\1\132\1\133\1\134\1\63\1\64\1\36\1\65"+
    "\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\117"+
    "\1\30\1\144\1\145\1\146\1\100\15\117\1\30\4\117"+
    "\1\101\1\102\1\30\1\103\1\104\1\105\1\106\1\147"+
    "\1\150\1\117\1\111\1\112\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\3\31\1\32\1\151\1\34\1\35\5\27"+
    "\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\36"+
    "\1\122\1\46\1\47\1\50\1\51\1\52\1\53\1\54"+
    "\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64"+
    "\1\36\1\65\1\66\1\67\1\70\1\71\1\72\1\73"+
    "\1\74\1\27\1\30\1\75\1\76\1\77\1\100\15\27"+
    "\1\30\4\27\1\101\1\102\1\30\1\103\1\104\1\105"+
    "\1\106\1\107\1\110\1\27\1\111\1\112\1\152\1\153"+
    "\1\154\124\152\2\7\1\0\124\7\1\155\3\156\123\155"+
    "\1\157\1\160\125\157\2\161\1\0\124\161\1\162\3\156"+
    "\123\162\1\163\3\156\123\163\1\164\3\156\123\164\1\165"+
    "\1\166\125\165\2\167\1\0\124\167\1\170\1\171\43\170"+
    "\1\172\10\170\2\172\2\170\1\172\44\170\1\173\3\156"+
    "\123\173\1\174\1\175\125\174\131\0\1\25\127\0\1\26"+
    "\127\0\2\27\4\0\2\27\1\0\5\27\13\0\1\27"+
    "\1\0\11\27\4\0\14\27\1\0\22\27\2\0\1\27"+
    "\4\0\3\27\7\0\1\30\4\0\1\30\1\0\1\176"+
    "\47\0\1\30\21\0\1\30\6\0\1\30\11\0\2\32"+
    "\1\177\124\32\4\0\1\27\1\200\4\0\1\201\1\27"+
    "\1\202\5\27\13\0\1\27\1\0\11\27\4\0\10\27"+
    "\1\200\3\27\1\0\15\27\1\200\4\27\2\0\1\200"+
    "\4\0\3\27\6\0\1\27\1\203\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\1\27\1\204"+
    "\6\27\1\203\3\27\1\0\15\27\1\203\4\27\2\0"+
    "\1\203\4\0\3\27\16\0\1\205\135\0\2\36\5\0"+
    "\1\36\120\0\1\36\5\0\1\36\121\0\1\36\4\0"+
    "\1\36\100\0\1\206\5\0\2\206\1\0\5\206\4\0"+
    "\1\36\3\0\1\36\2\0\1\206\1\0\11\206\4\0"+
    "\10\206\1\0\3\206\1\0\15\206\1\0\4\206\7\0"+
    "\3\206\32\0\1\36\1\0\1\36\124\0\1\36\122\0"+
    "\1\207\3\0\1\36\1\0\1\36\7\0\1\210\4\0"+
    "\1\211\4\0\1\212\3\0\1\213\1\214\1\0\1\215"+
    "\1\0\1\216\74\0\1\36\77\0\1\217\5\0\2\217"+
    "\1\0\5\217\1\0\1\220\1\0\1\220\1\0\1\220"+
    "\5\0\1\217\1\0\11\217\2\0\1\221\1\0\10\217"+
    "\1\0\3\217\1\0\15\217\1\0\4\217\7\0\3\217"+
    "\6\0\2\27\4\0\2\27\1\0\5\27\13\0\1\27"+
    "\1\0\11\27\4\0\1\222\13\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\34\0\1\223\3\0\1\224\74\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\1\27\1\225\1\27\1\225\5\27\4\0\1\226\1\227"+
    "\12\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\3\27\1\110\10\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\1\27\1\225\1\27\1\225"+
    "\5\27\4\0\3\27\1\230\10\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\1\27\1\231"+
    "\1\0\5\27\13\0\1\232\1\0\1\233\3\27\1\225"+
    "\4\27\4\0\14\27\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\234\1\0\1\27\1\235\2\27\1\234\4\27\4\0"+
    "\3\27\1\236\10\27\1\0\22\27\2\0\1\27\4\0"+
    "\1\237\1\240\1\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\3\27\1\241\5\27\4\0"+
    "\1\242\13\27\1\0\22\27\2\0\1\27\4\0\3\27"+
    "\6\0\2\27\4\0\2\27\1\0\5\27\13\0\1\27"+
    "\1\0\7\27\1\243\1\27\4\0\1\244\13\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\1\27\1\245\12\27\1\0\22\27\2\0\1\27\4\0"+
    "\1\27\1\240\1\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\1\245\1\246"+
    "\12\27\1\0\22\27\2\0\1\27\4\0\3\27\52\0"+
    "\1\36\127\0\1\36\130\0\1\247\57\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\3\27\1\225\7\27\1\235\1\0\22\27\2\0\1\27"+
    "\4\0\3\27\6\0\2\27\4\0\2\27\1\0\5\27"+
    "\13\0\1\27\1\0\5\27\1\250\3\27\4\0\14\27"+
    "\1\0\22\27\2\0\1\27\4\0\3\27\6\0\2\27"+
    "\4\0\2\27\1\0\5\27\13\0\1\27\1\0\3\27"+
    "\1\251\5\27\4\0\1\240\13\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\3\27\1\252\5\27\4\0"+
    "\14\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\1\253\13\27\1\0\22\27\2\0\1\27"+
    "\4\0\3\27\6\0\2\27\4\0\2\27\1\0\5\27"+
    "\13\0\1\27\1\0\11\27\4\0\4\27\1\240\7\27"+
    "\1\0\22\27\2\0\1\27\4\0\3\27\6\0\2\27"+
    "\4\0\2\27\1\0\5\27\13\0\1\27\1\0\6\27"+
    "\1\254\2\27\4\0\1\255\6\27\1\256\3\27\1\257"+
    "\1\0\22\27\2\0\1\27\4\0\3\27\6\0\2\27"+
    "\4\0\2\27\1\0\5\27\13\0\1\27\1\0\11\27"+
    "\4\0\3\27\1\260\10\27\1\0\22\27\2\0\1\27"+
    "\4\0\3\27\6\0\2\27\4\0\2\27\1\0\5\27"+
    "\13\0\1\27\1\0\3\27\1\261\5\27\4\0\14\27"+
    "\1\0\22\27\2\0\1\27\4\0\3\27\6\0\2\27"+
    "\4\0\2\27\1\0\5\27\13\0\1\27\1\0\5\27"+
    "\1\262\3\27\4\0\6\27\1\263\5\27\1\0\22\27"+
    "\2\0\1\27\4\0\3\27\6\0\1\264\1\0\4\265"+
    "\2\264\1\265\5\264\7\265\1\0\3\265\1\264\1\265"+
    "\11\264\2\265\1\266\1\265\10\264\1\0\3\264\1\265"+
    "\15\264\1\0\4\264\7\265\3\264\6\0\1\267\5\0"+
    "\2\267\1\0\5\267\1\0\1\270\1\0\1\270\1\0"+
    "\1\270\5\0\1\267\1\0\11\267\2\0\1\271\1\0"+
    "\10\267\1\0\3\267\1\0\15\267\1\0\4\267\7\0"+
    "\3\267\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\11\27\4\0\7\27\1\272\4\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\2\0\2\114\1\115"+
    "\126\114\1\115\42\114\1\273\61\114\4\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\11\117\4\0"+
    "\14\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\1\117\1\274\4\0\1\275\1\117\1\202\5\117\13\0"+
    "\1\117\1\0\11\117\4\0\10\117\1\274\3\117\1\0"+
    "\15\117\1\274\4\117\2\0\1\274\4\0\3\117\6\0"+
    "\1\117\1\276\4\0\2\117\1\0\5\117\13\0\1\117"+
    "\1\0\11\117\4\0\1\117\1\277\6\117\1\276\3\117"+
    "\1\0\15\117\1\276\4\117\2\0\1\276\4\0\3\117"+
    "\26\0\1\207\3\0\1\36\1\0\1\36\100\0\2\117"+
    "\4\0\2\117\1\0\5\117\13\0\1\117\1\0\11\117"+
    "\4\0\1\300\13\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\1\117\1\301\1\117\1\301\5\117\4\0"+
    "\1\302\1\303\12\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\11\117\4\0\3\117\1\150\10\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\1\117\1\301"+
    "\1\117\1\301\5\117\4\0\3\117\1\304\10\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\1\117\1\305\1\0\5\117\13\0\1\306\1\0\1\307"+
    "\3\117\1\301\4\117\4\0\14\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\310\1\0\1\117\1\311\2\117\1\310"+
    "\4\117\4\0\3\117\1\312\10\117\1\0\22\117\2\0"+
    "\1\117\4\0\1\313\1\314\1\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\3\117\1\315"+
    "\5\117\4\0\1\316\13\117\1\0\22\117\2\0\1\117"+
    "\4\0\3\117\6\0\2\117\4\0\2\117\1\0\5\117"+
    "\13\0\1\117\1\0\7\117\1\317\1\117\4\0\1\320"+
    "\13\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\11\117\4\0\1\117\1\321\12\117\1\0\22\117\2\0"+
    "\1\117\4\0\1\117\1\314\1\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\11\117\4\0"+
    "\1\321\1\322\12\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\11\117\4\0\3\117\1\301\7\117\1\311"+
    "\1\0\22\117\2\0\1\117\4\0\3\117\6\0\2\117"+
    "\4\0\2\117\1\0\5\117\13\0\1\117\1\0\5\117"+
    "\1\323\3\117\4\0\14\117\1\0\22\117\2\0\1\117"+
    "\4\0\3\117\6\0\2\117\4\0\2\117\1\0\5\117"+
    "\13\0\1\117\1\0\3\117\1\324\5\117\4\0\1\314"+
    "\13\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\3\117\1\325\5\117\4\0\14\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\11\117\4\0\1\326\13\117"+
    "\1\0\22\117\2\0\1\117\4\0\3\117\6\0\2\117"+
    "\4\0\2\117\1\0\5\117\13\0\1\117\1\0\11\117"+
    "\4\0\4\117\1\314\7\117\1\0\22\117\2\0\1\117"+
    "\4\0\3\117\6\0\2\117\4\0\2\117\1\0\5\117"+
    "\13\0\1\117\1\0\6\117\1\327\2\117\4\0\1\330"+
    "\6\117\1\331\3\117\1\332\1\0\22\117\2\0\1\117"+
    "\4\0\3\117\6\0\2\117\4\0\2\117\1\0\5\117"+
    "\13\0\1\117\1\0\11\117\4\0\3\117\1\333\10\117"+
    "\1\0\22\117\2\0\1\117\4\0\3\117\6\0\2\117"+
    "\4\0\2\117\1\0\5\117\13\0\1\117\1\0\3\117"+
    "\1\334\5\117\4\0\14\117\1\0\22\117\2\0\1\117"+
    "\4\0\3\117\6\0\2\117\4\0\2\117\1\0\5\117"+
    "\13\0\1\117\1\0\5\117\1\335\3\117\4\0\6\117"+
    "\1\336\5\117\1\0\22\117\2\0\1\117\4\0\3\117"+
    "\6\0\2\117\4\0\2\117\1\0\5\117\13\0\1\117"+
    "\1\0\11\117\4\0\7\117\1\337\4\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\1\27\1\200\4\0"+
    "\1\340\1\27\1\202\5\27\13\0\1\27\1\0\11\27"+
    "\4\0\10\27\1\200\3\27\1\0\15\27\1\200\4\27"+
    "\2\0\1\200\4\0\3\27\2\0\2\152\1\0\126\152"+
    "\1\154\124\152\1\0\3\156\125\0\1\157\126\0\1\165"+
    "\126\0\1\170\126\0\1\174\131\0\1\341\4\0\1\342"+
    "\51\0\1\341\21\0\1\341\6\0\1\341\15\0\1\27"+
    "\1\200\4\0\1\200\1\27\1\202\5\27\13\0\1\27"+
    "\1\0\11\27\4\0\10\27\1\200\3\27\1\0\15\27"+
    "\1\200\4\27\2\0\1\200\4\0\3\27\6\0\1\27"+
    "\1\200\4\0\1\200\1\27\1\202\1\343\1\27\1\344"+
    "\2\27\13\0\1\27\1\0\11\27\4\0\10\27\1\200"+
    "\3\27\1\0\5\27\1\345\3\27\1\346\2\27\1\347"+
    "\1\200\3\27\1\350\2\0\1\200\4\0\3\27\7\0"+
    "\1\342\4\0\1\342\51\0\1\342\21\0\1\342\6\0"+
    "\1\342\15\0\1\27\1\203\4\0\1\203\1\27\1\351"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\10\27\1\203"+
    "\3\27\1\0\15\27\1\203\4\27\2\0\1\203\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\1\352\10\27\4\0\14\27\1\0\22\27"+
    "\2\0\1\27\4\0\3\27\16\0\1\36\116\0\2\206"+
    "\4\0\2\206\1\0\5\206\13\0\1\206\1\0\11\206"+
    "\3\0\1\353\14\206\1\0\22\206\2\0\1\206\4\0"+
    "\3\206\46\0\1\354\136\0\1\355\65\0\1\356\167\0"+
    "\1\357\112\0\1\360\130\0\1\361\126\0\1\362\12\0"+
    "\1\363\55\0\2\217\4\0\2\217\1\0\5\217\13\0"+
    "\1\217\1\0\11\217\3\0\1\364\14\217\1\0\22\217"+
    "\2\0\1\217\4\0\3\217\112\0\1\220\22\0\2\27"+
    "\4\0\2\27\1\0\5\27\13\0\1\27\1\0\11\27"+
    "\4\0\3\27\1\225\10\27\1\0\22\27\2\0\1\27"+
    "\4\0\3\27\26\0\1\36\105\0\1\365\1\366\1\0"+
    "\1\367\1\370\1\371\1\0\2\366\1\0\5\366\13\0"+
    "\1\366\1\0\11\366\4\0\10\366\1\0\3\366\1\0"+
    "\15\366\1\0\4\366\7\0\3\366\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\6\27\1\231"+
    "\2\27\4\0\14\27\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\11\27\4\0\6\27\1\372\5\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\3\27\1\245"+
    "\5\27\4\0\14\27\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\11\27\4\0\1\27\1\373\12\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\5\27\1\374\6\27\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\11\27\4\0\6\27\1\375\5\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\1\27\1\235"+
    "\7\27\4\0\14\27\1\0\22\27\2\0\1\27\4\0"+
    "\1\27\1\240\1\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\3\27\1\240"+
    "\10\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\372\1\0"+
    "\11\27\4\0\14\27\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\1\27\1\225\7\27\4\0\14\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\10\27\1\225"+
    "\4\0\14\27\1\0\22\27\2\0\1\27\4\0\3\27"+
    "\6\0\2\27\4\0\2\27\1\0\5\27\13\0\1\27"+
    "\1\0\5\27\1\376\3\27\4\0\14\27\1\0\22\27"+
    "\2\0\1\27\4\0\3\27\6\0\2\27\4\0\2\27"+
    "\1\0\5\27\13\0\1\27\1\0\10\27\1\240\4\0"+
    "\14\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\6\27\1\377\2\27\4\0\14\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\2\27\1\225"+
    "\11\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\4\27\1\u0100\7\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\1\27\1\u0101\2\27\1\u0102"+
    "\4\27\4\0\2\27\1\u0103\1\27\1\225\7\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\3\27\1\u0104\10\27\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\11\27\4\0\1\27\1\u0105\12\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\3\27\1\372\10\27\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\11\27\4\0\5\27\1\u0106\6\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\11\27\1\240\2\27\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\3\27\1\u0107\5\27\4\0\14\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\14\27\1\0\22\27\2\0\1\27\4\0\1\27\1\u0108"+
    "\1\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\1\27\1\u0109\7\27\4\0\14\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\3\27\1\240"+
    "\5\27\4\0\14\27\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\264\4\0\2\264\1\0\5\264\13\0"+
    "\1\264\1\0\11\264\3\0\1\u010a\14\264\1\0\22\264"+
    "\2\0\1\264\4\0\3\264\17\0\1\u010b\3\265\1\u010c"+
    "\47\0\1\u010d\1\u010e\1\265\2\0\1\265\1\0\1\265"+
    "\1\u010f\1\265\1\u0110\1\u0111\1\265\1\0\4\265\20\0"+
    "\2\267\4\0\2\267\1\0\5\267\13\0\1\267\1\0"+
    "\11\267\3\0\1\u0112\14\267\1\0\22\267\2\0\1\267"+
    "\4\0\3\267\112\0\1\270\22\0\2\27\4\0\2\27"+
    "\1\0\5\27\13\0\1\27\1\0\11\27\4\0\5\27"+
    "\1\u0113\6\27\1\0\22\27\2\0\1\27\4\0\3\27"+
    "\2\0\2\114\1\115\64\114\1\u0114\37\114\4\0\1\117"+
    "\1\274\4\0\1\274\1\117\1\202\5\117\13\0\1\117"+
    "\1\0\11\117\4\0\10\117\1\274\3\117\1\0\15\117"+
    "\1\274\4\117\2\0\1\274\4\0\3\117\6\0\1\117"+
    "\1\274\4\0\1\274\1\117\1\202\5\117\13\0\1\117"+
    "\1\0\11\117\4\0\10\117\1\274\3\117\1\0\5\117"+
    "\1\u0115\3\117\1\u0116\2\117\1\u0117\1\274\3\117\1\u0118"+
    "\2\0\1\274\4\0\3\117\6\0\1\117\1\276\4\0"+
    "\1\276\1\117\1\351\5\117\13\0\1\117\1\0\11\117"+
    "\4\0\10\117\1\276\3\117\1\0\15\117\1\276\4\117"+
    "\2\0\1\276\4\0\3\117\6\0\2\117\4\0\2\117"+
    "\1\0\5\117\13\0\1\117\1\0\1\u0119\10\117\4\0"+
    "\14\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\11\117\4\0\3\117\1\301\10\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\6\117\1\305\2\117\4\0"+
    "\14\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\11\117\4\0\6\117\1\u011a\5\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\3\117\1\321\5\117\4\0"+
    "\14\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\11\117\4\0\1\117\1\u011b\12\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\11\117\4\0\5\117\1\u011c"+
    "\6\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\11\117\4\0\6\117\1\u011d\5\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\1\117\1\311\7\117\4\0"+
    "\14\117\1\0\22\117\2\0\1\117\4\0\1\117\1\314"+
    "\1\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\11\117\4\0\3\117\1\314\10\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\u011a\1\0\11\117\4\0"+
    "\14\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\1\117\1\301\7\117\4\0\14\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\10\117\1\301\4\0\14\117"+
    "\1\0\22\117\2\0\1\117\4\0\3\117\6\0\2\117"+
    "\4\0\2\117\1\0\5\117\13\0\1\117\1\0\5\117"+
    "\1\u011e\3\117\4\0\14\117\1\0\22\117\2\0\1\117"+
    "\4\0\3\117\6\0\2\117\4\0\2\117\1\0\5\117"+
    "\13\0\1\117\1\0\10\117\1\314\4\0\14\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\6\117\1\u011f"+
    "\2\117\4\0\14\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\11\117\4\0\2\117\1\301\11\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\11\117\4\0"+
    "\4\117\1\u0120\7\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\1\117\1\u0121\2\117\1\u0122\4\117\4\0"+
    "\2\117\1\u0123\1\117\1\301\7\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\11\117\4\0\3\117\1\u0124"+
    "\10\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\11\117\4\0\1\117\1\u0125\12\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\11\117\4\0\3\117\1\u011a"+
    "\10\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\11\117\4\0\5\117\1\u0126\6\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\11\117\4\0\11\117\1\314"+
    "\2\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\3\117\1\u0127\5\117\4\0\14\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\11\117\4\0\14\117\1\0"+
    "\22\117\2\0\1\117\4\0\1\117\1\u0128\1\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\1\117\1\u0129\7\117\4\0\14\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\3\117\1\314\5\117\4\0"+
    "\14\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\11\117\4\0\5\117\1\u012a\6\117\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\1\27\1\200\4\0\1\200"+
    "\1\27\1\202\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\10\27\1\200\3\27\1\0\5\27\1\345\3\27\1\346"+
    "\2\27\1\347\1\200\3\27\1\350\2\0\1\200\4\0"+
    "\3\27\7\0\1\341\4\0\1\341\1\0\1\351\47\0"+
    "\1\341\21\0\1\341\6\0\1\341\15\0\2\27\4\0"+
    "\2\27\1\0\1\27\1\u012b\3\27\13\0\1\27\1\0"+
    "\11\27\4\0\14\27\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\3\27\1\u012c"+
    "\1\27\13\0\1\27\1\0\11\27\4\0\14\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\14\27\1\0\12\27\1\u012d\7\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\11\27\4\0\14\27\1\0\2\27\1\u012e"+
    "\17\27\2\0\1\27\4\0\3\27\6\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\14\27\1\0\2\27\1\u012f\17\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\3\27\1\u0130"+
    "\1\27\13\0\1\27\1\0\11\27\4\0\14\27\1\0"+
    "\22\27\2\0\1\27\4\0\3\27\7\0\1\u0131\56\0"+
    "\1\u0131\21\0\1\u0131\6\0\1\u0131\15\0\2\27\4\0"+
    "\2\27\1\0\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\13\27\1\u0132\1\0\22\27\2\0\1\27\4\0\3\27"+
    "\55\0\1\u0133\120\0\1\u0134\10\0\1\u0135\126\0\1\u0135"+
    "\112\0\1\357\143\0\1\u0135\111\0\1\u0136\141\0\1\u0137"+
    "\112\0\1\u0138\132\0\1\u0139\134\0\1\u013a\57\0\2\366"+
    "\4\0\2\366\1\0\5\366\13\0\1\366\1\0\11\366"+
    "\4\0\14\366\1\0\22\366\2\0\1\366\4\0\3\366"+
    "\6\0\1\u013b\5\0\2\u013b\1\0\5\u013b\13\0\1\u013b"+
    "\1\0\11\u013b\4\0\10\u013b\1\0\3\u013b\1\0\15\u013b"+
    "\1\0\4\u013b\7\0\3\u013b\6\0\1\u013c\5\0\2\u013c"+
    "\1\0\5\u013c\13\0\1\u013c\1\0\11\u013c\4\0\10\u013c"+
    "\1\0\3\u013c\1\0\15\u013c\1\0\4\u013c\7\0\3\u013c"+
    "\6\0\1\u013d\5\0\2\u013d\1\0\5\u013d\13\0\1\u013d"+
    "\1\0\11\u013d\4\0\10\u013d\1\0\3\u013d\1\0\15\u013d"+
    "\1\0\4\u013d\7\0\3\u013d\6\0\2\27\4\0\2\27"+
    "\1\0\5\27\13\0\1\27\1\0\1\27\1\240\7\27"+
    "\4\0\14\27\1\0\22\27\2\0\1\27\4\0\3\27"+
    "\6\0\2\27\4\0\2\27\1\0\5\27\13\0\1\27"+
    "\1\0\1\240\10\27\4\0\14\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\1\27\1\240\7\27\4\0"+
    "\6\27\1\u013e\5\27\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\3\27\1\240\5\27\4\0\5\27\1\73"+
    "\6\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\1\27\1\u013f\7\27\4\0\14\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\12\27\1\u0140"+
    "\1\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\5\27\1\u0141\6\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\13\27\1\u0142"+
    "\1\0\22\27\2\0\1\27\4\0\3\27\6\0\2\27"+
    "\4\0\2\27\1\0\5\27\13\0\1\27\1\0\11\27"+
    "\4\0\13\27\1\u0143\1\0\22\27\2\0\1\27\4\0"+
    "\3\27\6\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\11\27\4\0\1\240\13\27\1\0\22\27"+
    "\2\0\1\27\4\0\3\27\6\0\2\27\4\0\2\27"+
    "\1\0\5\27\13\0\1\27\1\0\3\27\1\u0144\5\27"+
    "\4\0\14\27\1\0\22\27\2\0\1\27\4\0\3\27"+
    "\6\0\2\27\4\0\2\27\1\0\5\27\13\0\1\27"+
    "\1\0\1\u0145\10\27\4\0\14\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\4\27\1\372"+
    "\7\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\1\27\1\u0146\12\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\6\27\1\240"+
    "\5\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\5\27\1\373\6\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\55\0\1\u0147\71\0\1\u0148\130\0"+
    "\1\u0149\126\0\1\u014a\52\0\1\u014b\50\0\1\u014c\221\0"+
    "\1\u014d\34\0\1\u014e\2\0\1\u014f\217\0\1\u0150\67\0"+
    "\1\u0151\57\0\2\27\4\0\2\27\1\0\5\27\13\0"+
    "\1\27\1\0\1\263\10\27\4\0\14\27\1\0\22\27"+
    "\2\0\1\27\4\0\3\27\2\0\2\114\1\115\35\114"+
    "\1\u0152\66\114\4\0\2\117\4\0\2\117\1\0\5\117"+
    "\13\0\1\117\1\0\11\117\4\0\14\117\1\0\12\117"+
    "\1\u0153\7\117\2\0\1\117\4\0\3\117\6\0\2\117"+
    "\4\0\2\117\1\0\5\117\13\0\1\117\1\0\11\117"+
    "\4\0\14\117\1\0\2\117\1\u0154\17\117\2\0\1\117"+
    "\4\0\3\117\6\0\2\117\4\0\2\117\1\0\5\117"+
    "\13\0\1\117\1\0\11\117\4\0\14\117\1\0\2\117"+
    "\1\u0155\17\117\2\0\1\117\4\0\3\117\6\0\2\117"+
    "\4\0\2\117\1\0\3\117\1\u0156\1\117\13\0\1\117"+
    "\1\0\11\117\4\0\14\117\1\0\22\117\2\0\1\117"+
    "\4\0\3\117\6\0\2\117\4\0\2\117\1\0\5\117"+
    "\13\0\1\117\1\0\11\117\4\0\13\117\1\u0157\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\1\117\1\314"+
    "\7\117\4\0\14\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\1\314\10\117\4\0\14\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\2\117\4\0\2\117"+
    "\1\0\5\117\13\0\1\117\1\0\1\117\1\314\7\117"+
    "\4\0\6\117\1\u0158\5\117\1\0\22\117\2\0\1\117"+
    "\4\0\3\117\6\0\2\117\4\0\2\117\1\0\5\117"+
    "\13\0\1\117\1\0\3\117\1\314\5\117\4\0\5\117"+
    "\1\142\6\117\1\0\22\117\2\0\1\117\4\0\3\117"+
    "\6\0\2\117\4\0\2\117\1\0\5\117\13\0\1\117"+
    "\1\0\1\117\1\u0159\7\117\4\0\14\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\2\117\4\0\2\117"+
    "\1\0\5\117\13\0\1\117\1\0\11\117\4\0\12\117"+
    "\1\u015a\1\117\1\0\22\117\2\0\1\117\4\0\3\117"+
    "\6\0\2\117\4\0\2\117\1\0\5\117\13\0\1\117"+
    "\1\0\11\117\4\0\5\117\1\u015b\6\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\2\117\4\0\2\117"+
    "\1\0\5\117\13\0\1\117\1\0\11\117\4\0\13\117"+
    "\1\u015c\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\117\4\0\2\117\1\0\5\117\13\0\1\117\1\0"+
    "\11\117\4\0\13\117\1\u015d\1\0\22\117\2\0\1\117"+
    "\4\0\3\117\6\0\2\117\4\0\2\117\1\0\5\117"+
    "\13\0\1\117\1\0\11\117\4\0\1\314\13\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\3\117\1\u015e"+
    "\5\117\4\0\14\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\1\u015f\10\117\4\0\14\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\2\117\4\0\2\117"+
    "\1\0\5\117\13\0\1\117\1\0\11\117\4\0\4\117"+
    "\1\u011a\7\117\1\0\22\117\2\0\1\117\4\0\3\117"+
    "\6\0\2\117\4\0\2\117\1\0\5\117\13\0\1\117"+
    "\1\0\11\117\4\0\1\117\1\u0160\12\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\2\117\4\0\2\117"+
    "\1\0\5\117\13\0\1\117\1\0\11\117\4\0\6\117"+
    "\1\314\5\117\1\0\22\117\2\0\1\117\4\0\3\117"+
    "\6\0\2\117\4\0\2\117\1\0\5\117\13\0\1\117"+
    "\1\0\11\117\4\0\5\117\1\u011b\6\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\2\117\4\0\2\117"+
    "\1\0\5\117\13\0\1\117\1\0\1\336\10\117\4\0"+
    "\14\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\27\4\0\2\27\1\0\2\27\1\u0161\2\27\13\0"+
    "\1\27\1\0\11\27\4\0\14\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\4\27\1\u0162\13\0\1\27\1\0\11\27\4\0\14\27"+
    "\1\0\22\27\2\0\1\27\4\0\3\27\6\0\2\27"+
    "\4\0\2\27\1\0\5\27\13\0\1\27\1\0\11\27"+
    "\4\0\14\27\1\0\4\27\1\u0163\15\27\2\0\1\27"+
    "\4\0\3\27\6\0\2\27\4\0\2\27\1\0\1\27"+
    "\1\u0164\3\27\13\0\1\27\1\0\11\27\4\0\14\27"+
    "\1\0\22\27\2\0\1\27\4\0\3\27\6\0\2\27"+
    "\4\0\2\27\1\0\5\27\13\0\1\27\1\0\11\27"+
    "\4\0\14\27\1\0\11\27\1\u0164\10\27\2\0\1\27"+
    "\4\0\3\27\6\0\2\27\4\0\2\27\1\0\5\27"+
    "\13\0\1\27\1\0\11\27\4\0\14\27\1\0\10\27"+
    "\1\u0165\11\27\2\0\1\27\4\0\3\27\7\0\1\u0131"+
    "\4\0\1\u0131\1\0\1\351\47\0\1\u0131\21\0\1\u0131"+
    "\6\0\1\u0131\15\0\2\27\4\0\2\27\1\0\5\27"+
    "\13\0\1\27\1\0\3\27\1\u0108\5\27\4\0\14\27"+
    "\1\0\22\27\2\0\1\27\4\0\3\27\6\0\1\206"+
    "\5\0\2\206\1\0\5\206\13\0\1\206\1\0\11\206"+
    "\4\0\10\206\1\0\3\206\1\0\15\206\1\0\4\206"+
    "\7\0\3\206\56\0\1\u0166\52\0\2\u0135\1\u0167\124\u0135"+
    "\46\0\1\u0135\136\0\1\u0168\131\0\1\u0169\133\0\1\u0135"+
    "\44\0\1\217\5\0\2\217\1\0\5\217\13\0\1\217"+
    "\1\0\11\217\4\0\10\217\1\0\3\217\1\0\15\217"+
    "\1\0\4\217\7\0\3\217\6\0\2\u013b\1\u016a\3\0"+
    "\2\u013b\1\0\5\u013b\13\0\1\u013b\1\0\11\u013b\4\0"+
    "\14\u013b\1\0\22\u013b\2\0\1\u013b\4\0\3\u013b\6\0"+
    "\2\u013c\1\0\1\u016a\2\0\2\u013c\1\0\5\u013c\13\0"+
    "\1\u013c\1\0\11\u013c\4\0\14\u013c\1\0\22\u013c\2\0"+
    "\1\u013c\4\0\3\u013c\6\0\2\u013d\2\0\1\u016a\1\0"+
    "\2\u013d\1\0\5\u013d\13\0\1\u013d\1\0\11\u013d\4\0"+
    "\14\u013d\1\0\22\u013d\2\0\1\u013d\4\0\3\u013d\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\1\27\1\u016b\7\27\4\0\14\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\5\27\1\u016c"+
    "\6\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\1\27\1\u016d\12\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\5\27\1\u016e\3\27\4\0"+
    "\14\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\3\27\1\u016f\10\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\5\27\1\u0170"+
    "\6\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\1\27\1\u0171\12\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\1\27\1\222"+
    "\12\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\12\27\1\240\1\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\1\264\5\0\2\264\1\0"+
    "\5\264\13\0\1\264\1\0\11\264\4\0\10\264\1\0"+
    "\3\264\1\0\15\264\1\0\4\264\7\0\3\264\103\0"+
    "\1\u0172\120\0\1\u0173\125\0\1\u0174\53\0\1\u0175\121\0"+
    "\1\u0176\207\0\1\u0177\126\0\1\u0178\140\0\1\u0179\36\0"+
    "\1\u017a\115\0\1\267\5\0\2\267\1\0\5\267\13\0"+
    "\1\267\1\0\11\267\4\0\10\267\1\0\3\267\1\0"+
    "\15\267\1\0\4\267\7\0\3\267\2\0\2\u0152\1\u017b"+
    "\124\u0152\4\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\11\117\4\0\14\117\1\0\4\117\1\u017c"+
    "\15\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\1\117\1\u017d\3\117\13\0\1\117\1\0"+
    "\11\117\4\0\14\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\11\117\4\0\14\117\1\0\11\117\1\u017d"+
    "\10\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\11\117\4\0"+
    "\14\117\1\0\10\117\1\u017e\11\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\3\117\1\u0128\5\117\4\0\14\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\1\117\1\u017f"+
    "\7\117\4\0\14\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\11\117\4\0\5\117\1\u0180\6\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\11\117\4\0"+
    "\1\117\1\u0181\12\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\5\117\1\u0182\3\117\4\0\14\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\11\117\4\0"+
    "\3\117\1\u0183\10\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\11\117\4\0\5\117\1\u0184\6\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\11\117\4\0"+
    "\1\117\1\u0185\12\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\117\4\0\2\117\1\0\5\117\13\0"+
    "\1\117\1\0\11\117\4\0\1\117\1\300\12\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\11\117\4\0"+
    "\12\117\1\314\1\117\1\0\22\117\2\0\1\117\4\0"+
    "\3\117\6\0\2\27\4\0\1\u0186\1\27\1\0\5\27"+
    "\13\0\1\27\1\0\11\27\4\0\14\27\1\0\22\27"+
    "\2\0\1\27\4\0\3\27\6\0\2\27\4\0\2\27"+
    "\1\0\3\27\1\u0161\1\27\13\0\1\27\1\0\11\27"+
    "\4\0\14\27\1\0\22\27\2\0\1\27\4\0\3\27"+
    "\6\0\2\27\4\0\1\u0187\1\27\1\0\5\27\13\0"+
    "\1\27\1\0\11\27\4\0\14\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\1\u0163\4\27\13\0\1\27\1\0\11\27\4\0\14\27"+
    "\1\0\22\27\2\0\1\27\4\0\3\27\6\0\2\27"+
    "\4\0\2\27\1\0\5\27\13\0\1\27\1\0\11\27"+
    "\4\0\14\27\1\0\22\27\2\0\1\27\4\0\2\27"+
    "\1\u0188\60\0\1\u0189\134\0\1\u0135\106\0\1\u0135\66\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\6\27\1\225\5\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\5\27\1\u018a\3\27\4\0"+
    "\14\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\2\27\1\263\6\27\4\0\14\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\3\27\1\250\5\27\4\0"+
    "\14\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\5\27\1\240\3\27\4\0\14\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\3\27\1\263"+
    "\10\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\6\27\1\u018b\2\27\4\0\14\27\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\106\0\1\u018c\40\0\1\u018d\126\0"+
    "\1\u018e\125\0\1\u018f\130\0\1\u0190\1\0\1\u0191\207\0"+
    "\1\u0192\125\0\1\u0193\133\0\1\u0194\36\0\1\265\114\0"+
    "\2\117\4\0\1\u0195\1\117\1\0\5\117\13\0\1\117"+
    "\1\0\11\117\4\0\14\117\1\0\22\117\2\0\1\117"+
    "\4\0\3\117\6\0\2\117\4\0\2\117\1\0\1\u017c"+
    "\4\117\13\0\1\117\1\0\11\117\4\0\14\117\1\0"+
    "\22\117\2\0\1\117\4\0\3\117\6\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\11\117\4\0"+
    "\14\117\1\0\22\117\2\0\1\117\4\0\2\117\1\u0196"+
    "\6\0\2\117\4\0\2\117\1\0\5\117\13\0\1\117"+
    "\1\0\11\117\4\0\6\117\1\301\5\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\2\117\4\0\2\117"+
    "\1\0\5\117\13\0\1\117\1\0\5\117\1\u0197\3\117"+
    "\4\0\14\117\1\0\22\117\2\0\1\117\4\0\3\117"+
    "\6\0\2\117\4\0\2\117\1\0\5\117\13\0\1\117"+
    "\1\0\2\117\1\336\6\117\4\0\14\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\2\117\4\0\2\117"+
    "\1\0\5\117\13\0\1\117\1\0\3\117\1\323\5\117"+
    "\4\0\14\117\1\0\22\117\2\0\1\117\4\0\3\117"+
    "\6\0\2\117\4\0\2\117\1\0\5\117\13\0\1\117"+
    "\1\0\5\117\1\314\3\117\4\0\14\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\2\117\4\0\2\117"+
    "\1\0\5\117\13\0\1\117\1\0\11\117\4\0\3\117"+
    "\1\336\10\117\1\0\22\117\2\0\1\117\4\0\3\117"+
    "\6\0\2\117\4\0\2\117\1\0\5\117\13\0\1\117"+
    "\1\0\6\117\1\u0198\2\117\4\0\14\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\2\27\4\0\1\u0199"+
    "\1\27\1\0\5\27\13\0\1\27\1\0\11\27\4\0"+
    "\14\27\1\0\22\27\2\0\1\27\4\0\3\27\6\0"+
    "\2\27\4\0\1\u019a\1\27\1\0\5\27\13\0\1\27"+
    "\1\0\11\27\4\0\14\27\1\0\22\27\2\0\1\27"+
    "\4\0\3\27\6\0\2\27\4\0\2\27\1\0\3\27"+
    "\1\u019b\1\27\13\0\1\27\1\0\11\27\4\0\14\27"+
    "\1\0\22\27\2\0\1\27\4\0\3\27\63\0\1\u019c"+
    "\51\0\2\27\4\0\2\27\1\0\5\27\13\0\1\27"+
    "\1\0\11\27\4\0\13\27\1\u0113\1\0\22\27\2\0"+
    "\1\27\4\0\3\27\6\0\2\27\4\0\2\27\1\0"+
    "\5\27\13\0\1\27\1\0\11\27\4\0\7\27\1\240"+
    "\4\27\1\0\22\27\2\0\1\27\4\0\3\27\21\0"+
    "\1\u019d\130\0\1\265\200\0\1\u019e\45\0\1\u019f\131\0"+
    "\1\u01a0\203\0\1\u01a1\53\0\1\u01a2\213\0\1\u01a3\124\0"+
    "\1\u01a4\30\0\2\117\4\0\1\u01a5\1\117\1\0\5\117"+
    "\13\0\1\117\1\0\11\117\4\0\14\117\1\0\22\117"+
    "\2\0\1\117\4\0\3\117\6\0\2\117\4\0\2\117"+
    "\1\0\3\117\1\u01a6\1\117\13\0\1\117\1\0\11\117"+
    "\4\0\14\117\1\0\22\117\2\0\1\117\4\0\3\117"+
    "\6\0\2\117\4\0\2\117\1\0\5\117\13\0\1\117"+
    "\1\0\11\117\4\0\13\117\1\u012a\1\0\22\117\2\0"+
    "\1\117\4\0\3\117\6\0\2\117\4\0\2\117\1\0"+
    "\5\117\13\0\1\117\1\0\11\117\4\0\7\117\1\314"+
    "\4\117\1\0\22\117\2\0\1\117\4\0\3\117\6\0"+
    "\2\27\4\0\2\27\1\0\5\27\13\0\1\27\1\0"+
    "\11\27\4\0\14\27\1\0\3\27\1\u0164\16\27\2\0"+
    "\1\27\4\0\3\27\46\0\1\u01a7\155\0\1\u01a8\51\0"+
    "\1\u01a9\206\0\1\u01aa\125\0\1\u01ab\124\0\1\u01ac\45\0"+
    "\1\u01ad\133\0\1\u01ae\213\0\1\u01af\26\0\2\117\4\0"+
    "\2\117\1\0\5\117\13\0\1\117\1\0\11\117\4\0"+
    "\14\117\1\0\3\117\1\u017d\16\117\2\0\1\117\4\0"+
    "\3\117\43\0\1\u0135\103\0\1\u01b0\204\0\1\u01b1\131\0"+
    "\1\u01b2\132\0\1\u01b3\40\0\1\u01b4\126\0\1\u01b5\126\0"+
    "\1\265\212\0\1\u01b6\121\0\1\265\44\0\1\u01b7\212\0"+
    "\1\u01b8\124\0\1\u01b9\44\0\1\u01ba\206\0\1\u01bb\54\0"+
    "\1\u01bc\203\0\1\u01bd\52\0\1\u01be\117\0\1\u01bf\214\0"+
    "\1\u01c0\120\0\1\u01c1\136\0\1\u01ae\117\0\1\u01c2\50\0"+
    "\1\u01c3\216\0\1\u01c4\41\0\1\u01c5\212\0\1\u01c6\43\0"+
    "\1\u01c7\205\0\1\u01c8\130\0\1\u01c9\133\0\1\u01ca\111\0"+
    "\1\u01cb\132\0\1\265\42\0\1\u01cc\134\0\1\u01cd\203\0"+
    "\1\u01ce\43\0\1\u01cf\215\0\1\u01d0\121\0\1\u01c7\135\0"+
    "\1\u01d1\41\0\1\u01d2\130\0\1\u01d3\213\0\1\265\41\0"+
    "\1\u01d4\210\0\1\u01d5\45\0\1\u01d6\207\0\1\u01c7\117\0"+
    "\1\u01d7\144\0\1\u01ae\15\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[36714];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;
  private static final char[] EMPTY_BUFFER = new char[0];
  private static final int YYEOF = -1;
  private static java.io.Reader zzReader = null; // Fake

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\2\1\2\0\2\1\13\0\1\11\1\1\1\11"+
    "\3\1\1\11\4\1\1\11\42\1\3\11\1\1\2\11"+
    "\2\1\3\11\1\1\1\11\36\1\2\11\1\1\1\11"+
    "\1\1\5\11\1\1\2\11\1\1\3\11\1\1\1\0"+
    "\1\11\2\1\1\0\4\1\1\11\7\0\1\1\1\11"+
    "\1\0\25\1\1\11\15\1\1\11\2\1\1\11\1\0"+
    "\57\1\1\0\1\1\13\0\1\1\3\0\20\1\1\0"+
    "\5\1\1\0\1\1\1\0\40\1\2\0\1\1\10\0"+
    "\11\1\13\0\24\1\1\0\1\11\2\0\1\11\7\1"+
    "\11\0\1\11\15\1\1\0\2\1\11\0\7\1\11\0"+
    "\2\1\61\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[471];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** this buffer may contains the current text array to be matched when it is cheap to acquire it */
  private char[] zzBufferArray;

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /* user code: */
    public void setTokenStart(int position){zzCurrentPos = zzStartRead = position;}
    public void setTokenEnd(int position){zzMarkedPos = position;}
    public CharSequence getBuffer(){ return zzBuffer;}
    public char[] getBufferArray(){ return zzBufferArray;}
    public int getBufferEnd() {return zzEndRead;}
    public int getNextTokenStart(){ return zzMarkedPos;}
    public boolean isLastToken(){ return zzMarkedPos == zzEndRead; }
    public void setState(int newState){ zzLexicalState = newState; }

    public void yybegin_YYINITIAL(){yybegin(YYINITIAL);}

    public void yybegin_LEX_EOF(){yybegin(LEX_EOF);}
    public void yybegin_LEX_POD(){yybegin(LEX_POD);}

    public boolean yystate_LEX_MULTILINE_WAITING(){return yystate() == LEX_MULTILINE_WAITING;}

    public void yybegin_LEX_MULTILINE(){yybegin(LEX_MULTILINE);}
    public void yybegin_LEX_MULTILINE_TOKEN(){yybegin(LEX_MULTILINE_TOKEN);}
    public void yybegin_LEX_MULTILINE_WAITING(){yybegin(LEX_MULTILINE_WAITING);}
    public void yybegin_LEX_QUOTE_LIKE_CHARS(){yybegin(LEX_QUOTE_LIKE_CHARS);}
    public void yybegin_LEX_QUOTE_LIKE_OPENER(){yybegin(LEX_QUOTE_LIKE_OPENER);}
    public void yybegin_LEX_QUOTE_LIKE_CLOSER(){yybegin(LEX_QUOTE_LIKE_CLOSER);}
    public void yybegin_LEX_QUOTE_LIKE_WORDS(){yybegin(LEX_QUOTE_LIKE_WORDS);}
    public void yybegin_LEX_QUOTE_LIKE_LIST_OPENER(){yybegin(LEX_QUOTE_LIKE_LIST_OPENER);}
    public void yybegin_LEX_QUOTE_LIKE_LIST_CLOSER(){yybegin(LEX_QUOTE_LIKE_LIST_CLOSER);}
    public void yybegin_LEX_TRANS_OPENER(){yybegin(LEX_TRANS_OPENER);}
    public void yybegin_LEX_TRANS_CHARS(){yybegin(LEX_TRANS_CHARS);}
    public void yybegin_LEX_TRANS_CLOSER(){yybegin(LEX_TRANS_CLOSER);}
    public void yybegin_LEX_TRANS_MODIFIERS(){yybegin(LEX_TRANS_MODIFIERS);}
    public void yybegin_LEX_REGEX_OPENER(){yybegin(LEX_REGEX_OPENER);}
    public void yybegin_LEX_REGEX_ITEMS(){yybegin(LEX_REGEX_ITEMS);}


  public PerlLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public PerlLexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 202) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart(){
    return zzStartRead;
  }

  public final int getTokenEnd(){
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end,int initialState){
    zzBuffer = buffer;
    zzBufferArray = com.intellij.util.text.CharArrayUtil.fromSequenceWithoutCopying(buffer);
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzPushbackPos = 0;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBufferArray != null ? zzBufferArray[zzStartRead+pos]:zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    char[] zzBufferArrayL = zzBufferArray;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL)
            zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 49: 
          { return PERL_ARRAY;
          }
        case 55: break;
        case 10: 
          { return processStringOpener();
          }
        case 56: break;
        case 51: 
          { processPodOpener();break;
          }
        case 57: break;
        case 3: 
          { if( isMultilineEnd() || isLastToken())
        {
            return endMultiline();
        }
        break;
          }
        case 58: break;
        case 9: 
          { return PERL_NUMBER;
          }
        case 59: break;
        case 54: 
          { return PERL_TAG;
          }
        case 60: break;
        case 29: 
          { return processOpenerWhiteSpace();
          }
        case 61: break;
        case 15: 
          { return processRegexOpener();
          }
        case 62: break;
        case 35: 
          { IElementType tokenType = processTransChar();
          if( tokenType != null )
                return tokenType;
          break;
          }
        case 63: break;
        case 53: 
          { processDataOpener(); break;
          }
        case 64: break;
        case 12: 
          { return PERL_OPERATOR;
          }
        case 65: break;
        case 32: 
          { IElementType type = processQuoteLikeListQuote();
            if( type == null ) // disallowed sharp
                break;
            return type;
          }
        case 66: break;
        case 7: 
          { return TokenType.WHITE_SPACE;
          }
        case 67: break;
        case 44: 
          { return PERL_HASH;
          }
        case 68: break;
        case 14: 
          { return processQuoteLikeStringOpener();
          }
        case 69: break;
        case 34: 
          { IElementType type = processTransQuote();
            if( type == null ) // disallowed sharp
                break;
            return type;
          }
        case 70: break;
        case 45: 
          { return processQuoteLikeListOpener();
          }
        case 71: break;
        case 38: 
          { return PERL_REGEX_MODIFIER;
          }
        case 72: break;
        case 23: 
          { return processTransOpener();
          }
        case 73: break;
        case 1: 
          { if( isLastToken() )
            return endDataBlock();
        break;
          }
        case 74: break;
        case 46: 
          { return PERL_KEYWORD;
          }
        case 75: break;
        case 19: 
          { return processSemicolon();
          }
        case 76: break;
        case 42: 
          { return PERL_GLOB;
          }
        case 77: break;
        case 30: 
          { IElementType tokenType = processQuoteLikeChar();
          if( tokenType != null )
                return tokenType;
          break;
          }
        case 78: break;
        case 47: 
          { return PERL_DEPACKAGE;
          }
        case 79: break;
        case 11: 
          { return PERL_COMMENT;
          }
        case 80: break;
        case 26: 
          { yybegin(YYINITIAL); return PERL_STRING_CONTENT;
          }
        case 81: break;
        case 27: 
          { if( isLastToken() )
        {
            return endMultiline();
        }
        break;
          }
        case 82: break;
        case 50: 
          { return processMultilineOpener();
          }
        case 83: break;
        case 39: 
          { parseRegex(); break;
          }
        case 84: break;
        case 36: 
          { return processTransCloser();
          }
        case 85: break;
        case 6: 
          { return processNewLine();
          }
        case 86: break;
        case 41: 
          { return PERL_NUMBER_VERSION;
          }
        case 87: break;
        case 17: 
          { return PERL_LPAREN;
          }
        case 88: break;
        case 13: 
          { return PERL_SIGIL_HASH;
          }
        case 89: break;
        case 5: 
          { return TokenType.BAD_CHARACTER;
          }
        case 90: break;
        case 48: 
          { return PERL_SCALAR;
          }
        case 91: break;
        case 2: 
          { if( isLastToken() )
        {
            endPodBlock();
        }
        break;
          }
        case 92: break;
        case 18: 
          { return PERL_RPAREN;
          }
        case 93: break;
        case 16: 
          { return PERL_SIGIL_SCALAR;
          }
        case 94: break;
        case 20: 
          { return PERL_SIGIL_ARRAY;
          }
        case 95: break;
        case 4: 
          { yybegin(YYINITIAL);return PERL_STRING_MULTILINE_END;
          }
        case 96: break;
        case 40: 
          { IElementType nextTokenType = getParsedToken();
        if( nextTokenType == null )
            break;
        return nextTokenType;
          }
        case 97: break;
        case 28: 
          { IElementType type = processQuoteLikeQuote();
            if( type == null ) // disallowed sharp
                break;
            return type;
          }
        case 98: break;
        case 43: 
          { return PERL_ARROW_COMMA;
          }
        case 99: break;
        case 24: 
          { return PERL_LBRACE;
          }
        case 100: break;
        case 25: 
          { return PERL_RBRACE;
          }
        case 101: break;
        case 8: 
          { return PERL_BAREWORD;
          }
        case 102: break;
        case 31: 
          { popState(); return PERL_QUOTE;
          }
        case 103: break;
        case 33: 
          { IElementType tokenType = processQuoteLikeWord();
          if( tokenType != null )
                return tokenType;
          break;
          }
        case 104: break;
        case 52: 
          { return endPodBlock();
          }
        case 105: break;
        case 37: 
          { popState(); yypushback(1); break;
          }
        case 106: break;
        case 22: 
          { return PERL_RBRACK;
          }
        case 107: break;
        case 21: 
          { return PERL_LBRACK;
          }
        case 108: break;
        default:
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          }
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
