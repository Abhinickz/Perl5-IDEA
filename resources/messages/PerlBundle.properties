#
# Copyright 2016 Alexandr Evstigneev
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
ttk2.configuration.template.dirs.label=Templates Directories:
ttk2.configuration.choose.template.dir.title=Select Template Directory
ttk2.configuration.extension=Extensions that should be handled as Template Toolkit templates (only under directories configured above):
ttk2.label.opentag=Start Tag:
ttk2.label.closetag=End Tag:
ttk2.label.outlinetag=Outline Tag:
ttk2.label.enableanycase=Allow using tags in any case
ttk2.error.emptyopentag=Start tag can't be empty
ttk2.error.emptyclosetag=End tag can't be empty
ttk2.unexpected.token=Unexpected token
ttk2.error.unclosed.block.directive=Unclosed block directive, missing END
ttk2.error.unclosed.perl.block=Unclosed perl block, missing END
ttk2.else.elsif.end.expected=ELSIF/ELSE/END expected
ttk2.catch.final.end.expected=CATCH/FINAL/END expected
tt2.error.file.not.in.root=Current template file is not under one of the configured roots
tt2.error.outside.if.block=This directive must be inside the IF/UNLESS block
tt2.error.outside.try.block=This directive must be inside the TRY block
tt2.error.end.outside.block=END directive must be a part of the any block directive
tt2.error.case.outside.switch=CASE directive must be inside the SWITCH block
tt2.error.keyword.in.identifier=Unexpected keyword or operator. Identifiers should not contain keywords or operators. You've probably unintentionally enabled tags in any case.
ttk2.error.empty.block.name=Block name can't be empty
perl.error.idea.project.or.module.sdk=You should set up Perl Interpreter as project or module SDK.
perl.error.micro.project.or.module.sdk=To be able to run Perl scripts you should configure a path to the Perl Interpreter.
perl.run.config.select.script.header=Select Perl Script
perl.run.config.select.script.prompt=Please select perl script file
perl.run.option.script=Script
perl.run.option.output.encoding=Script output encoding
perl.run.option.script.encoding=Script encoding
perl.run.option.debugger.startup.mode=Debugger startup mode
perl.run.option.debugger.noninteractive.mode=Enable non-interactive debugging mode (allows to pause and manage breakpoints while script is not paused, moderate overhead)
perl.run.option.debugger.compile.time.breakpoints=Enable compile-time breakpoints (use/BEGIN), significant overhead
perl.run.option.debugger.connection.mode=Connection mode
perl.run.option.debugger.init.code=Initialization code executed once after debugger init
perl.run.option.tab.general=General
perl.run.option.tab.debugging=Debugging
perl.run.option.remote.root=Remote project root
perl.run.option.debugger.host=Server host
perl.run.option.debugger.port=Server port
perl.run.option.perl.parameters=Perl5 parameters
perl.run.option.script.parameters=Script parameters:
perl.run.pause.unavailable.title=Pausing is not available
perl.run.pause.unavailable.content=To be able to pause running script, you should enable non-interactive debugging mode in run configuration settings
pod.structure.view.file.title=Documentation
perl.notification.configure=Configure
perl.notification.disable.notification=Disable Notification
perl.notification.interperter.not.configured=Perl5 interpreter is not configured
perl.notification.sdk.not.configured=Perl5 SDK is not configured
perl.tidy.formatting=Formatting with Perl::Tidy...
perl.incorrect.ascii.identifier=<html>For non-utf files perl identifier should match the regexp: <code>/ (?aa) (?!\\d) \\w+ /x</code>, but got {0}.</html>
pmea.filetype.description=Perl5 External Annotations
parser.identifier.expected=Identifier expected
parser.sub.or.package.expected='sub' or 'package' keyword expected
parser.package.expected='package' keyword expected
parser.package.name.expected=package name expected
parser.semicolon.expected=semicolon expected